DROP TABLE VENDEDOR CASCADE CONSTRAINTS;
DROP TABLE ADMINISTRATIVO CASCADE CONSTRAINTS;
DROP TABLE DETALLE_VENTA CASCADE CONSTRAINTS;
DROP TABLE VENTA CASCADE CONSTRAINTS;
DROP TABLE PRODUCTO CASCADE CONSTRAINTS;
DROP TABLE EMPLEADO CASCADE CONSTRAINTS;
DROP TABLE PROVEEDOR CASCADE CONSTRAINTS;
DROP TABLE MARCA CASCADE CONSTRAINTS;
DROP TABLE CATEGORIA CASCADE CONSTRAINTS;
DROP TABLE MEDIO_PAGO CASCADE CONSTRAINTS;
DROP TABLE SALUD CASCADE CONSTRAINTS;
DROP TABLE AFP CASCADE CONSTRAINTS;
DROP TABLE COMUNA CASCADE CONSTRAINTS;
DROP TABLE REGION CASCADE CONSTRAINTS;

-----------------------
-- CREACION DE TABLAS
-----------------------
-- Aplicando las constraint correspondiente para sus PK y FK


CREATE TABLE REGION (
    id_region NUMBER(4),
    nom_region VARCHAR2(255) NOT NULL,
    CONSTRAINT PK_REGION PRIMARY KEY (id_region)
);

CREATE TABLE COMUNA (
    id_comuna NUMBER(4),
    nom_comuna VARCHAR2(255) NOT NULL,
    cod_region NUMBER(4) NOT NULL,
    CONSTRAINT PK_COMUNA PRIMARY KEY (id_comuna),
    CONSTRAINT FK_COMUNA_REGION FOREIGN KEY (cod_region) REFERENCES REGION(id_region)
);

CREATE TABLE AFP (
     id_afp NUMBER(5) GENERATED BY DEFAULT AS IDENTITY 
        (START WITH 210 INCREMENT BY 6), -- APLIACION DE IDENTITY
    nom_afp VARCHAR2(255) NOT NULL,
    CONSTRAINT PK_AFP PRIMARY KEY (id_afp)
);

CREATE TABLE SALUD (
    id_salud NUMBER(4),
    nom_salud VARCHAR2(40) NOT NULL,
    CONSTRAINT PK_SALUD PRIMARY KEY (id_salud)
);

CREATE TABLE MEDIO_PAGO (
    id_mpago NUMBER(3),
    nombre_mpago VARCHAR2(50) NOT NULL,
    CONSTRAINT PK_MEDIO_PAGO PRIMARY KEY (id_mpago)
);

CREATE TABLE CATEGORIA (
    id_categoria NUMBER(3),
    nombre_categoria VARCHAR2(255) NOT NULL,
    CONSTRAINT PK_CATEGORIA PRIMARY KEY (id_categoria)
);

CREATE TABLE MARCA (
    id_marca NUMBER(3),
    nombre_marca VARCHAR2(25) NOT NULL,
    CONSTRAINT PK_MARCA PRIMARY KEY (id_marca)
);

CREATE TABLE PROVEEDOR (
    id_proveedor NUMBER(5),
    nombre_proveedor VARCHAR2(150) NOT NULL,
    rut_proveedor VARCHAR2(10) NOT NULL,
    telefono VARCHAR2(10) NOT NULL,
    email VARCHAR2(200) NOT NULL,
    direccion VARCHAR2(200) NOT NULL,
    cod_comuna NUMBER(4) NOT NULL,
    CONSTRAINT PK_PROVEEDOR PRIMARY KEY (id_proveedor),
    CONSTRAINT FK_PROVEEDOR_COMUNA FOREIGN KEY (cod_comuna) REFERENCES COMUNA(id_comuna)
);

CREATE TABLE EMPLEADO (
    id_empleado NUMBER(4) NOT NULL,
    rut_empleado VARCHAR2(10) NOT NULL,
    nombre_empleado VARCHAR2(25) NOT NULL,
    apellido_paterno VARCHAR2(25) NOT NULL,
    apellido_materno VARCHAR2(25) NOT NULL,
    fecha_contratacion DATE NOT NULL,
    sueldo_base NUMBER(10) NOT NULL,
    bono_jefatura NUMBER(10),
    activo CHAR(1) NOT NULL,
    tipo_empleado VARCHAR2(25) NOT NULL,
    cod_empleado NUMBER(4),
    cod_salud NUMBER(4) NOT NULL,
    cod_afp NUMBER(5) NOT NULL,
    CONSTRAINT PK_EMPLEADO PRIMARY KEY (id_empleado),
    CONSTRAINT FK_EMPLEADO_EMPLEADO FOREIGN KEY (cod_empleado) REFERENCES EMPLEADO(id_empleado),
    CONSTRAINT FK_EMPLEADO_SALUD FOREIGN KEY (cod_salud) REFERENCES SALUD(id_salud),
    CONSTRAINT FK_EMPLEADO_AFP FOREIGN KEY (cod_afp) REFERENCES AFP(id_afp)
);

CREATE TABLE PRODUCTO (
    id_producto NUMBER(4),
    nombre_producto VARCHAR2(100) NOT NULL,
    precio_unitario NUMBER NOT NULL,
    origen_nacional CHAR(1) NOT NULL,
    stock_minimo NUMBER(3) NOT NULL,
    activo CHAR(1) NOT NULL,
    cod_marca NUMBER(3) NOT NULL,
    cod_categoria NUMBER(3) NOT NULL,
    cod_proveedor NUMBER(5) NOT NULL,
    CONSTRAINT PK_PRODUCTO PRIMARY KEY (id_producto),
    CONSTRAINT FK_PRODUCTO_MARCA FOREIGN KEY (cod_marca) REFERENCES MARCA(id_marca),
    CONSTRAINT FK_PRODUCTO_CATEGORIA FOREIGN KEY (cod_categoria) REFERENCES CATEGORIA(id_categoria),
    CONSTRAINT FK_PRODUCTO_PROVEEDOR FOREIGN KEY (cod_proveedor) REFERENCES PROVEEDOR(id_proveedor)
);

CREATE TABLE VENTA (
    id_venta NUMBER(4) GENERATED BY DEFAULT AS IDENTITY 
        (START WITH 5050 INCREMENT BY 3), -- APLIACION DE IDENTITY
    fecha_venta DATE NOT NULL,
    total_venta NUMBER(10) NOT NULL,
    codigo_mpago NUMBER(3) NOT NULL,
    cod_empleado NUMBER(4) NOT NULL,
    CONSTRAINT PK_VENTA PRIMARY KEY (id_venta),
    CONSTRAINT FK_VENTA_MEDIO_PAGO FOREIGN KEY (codigo_mpago) REFERENCES MEDIO_PAGO(id_mpago),
    CONSTRAINT FK_VENTA_EMPLEADO FOREIGN KEY (cod_empleado) REFERENCES EMPLEADO(id_empleado)
);

CREATE TABLE DETALLE_VENTA (
    cod_venta NUMBER(4),
    cod_producto NUMBER(4),
    cantidad NUMBER(6) NOT NULL,
    CONSTRAINT PK_DETALLE_VENTA PRIMARY KEY (cod_venta, cod_producto),
    CONSTRAINT FK_DETALLE_VENTA_VENTA FOREIGN KEY (cod_venta) REFERENCES VENTA(id_venta),
    CONSTRAINT FK_DETALLE_VENTA_PRODUCTO FOREIGN KEY (cod_producto) REFERENCES PRODUCTO(id_producto)
);

CREATE TABLE ADMINISTRATIVO (
    id_empleado NUMBER(4),
    CONSTRAINT PK_ADMINISTRATIVO PRIMARY KEY (id_empleado),
    CONSTRAINT FK_ADMINISTRATIVO_EMPLEADO FOREIGN KEY (id_empleado) REFERENCES EMPLEADO(id_empleado)
);

CREATE TABLE VENDEDOR (
    id_empleado NUMBER(4),
    comision_venta NUMBER(5,2) NOT NULL,
    CONSTRAINT PK_VENDEDOR PRIMARY KEY (id_empleado),
    CONSTRAINT FK_VENDEDOR_EMPLEADO FOREIGN KEY (id_empleado) REFERENCES EMPLEADO(id_empleado)
);

-------------------------------------------------
-- MODIFICACIONES DEL MODELO USANDO ALTER TABLE
-------------------------------------------------
-- Sueldo mínimo de empleado
ALTER TABLE EMPLEADO
ADD CONSTRAINT CHK_SUELDO_MIN CHECK (sueldo_base >= 400000);

-- Comisión de vendedor entre 0 y 0.25
ALTER TABLE VENDEDOR
ADD CONSTRAINT CHK_COMISION_VENDEDOR CHECK (comision_venta >= 0 AND comision_venta <= 0.25);

-- Stock mínimo de productos de al menos 3 unidades
ALTER TABLE PRODUCTO
ADD CONSTRAINT CHK_STOCK_MINIMO CHECK (stock_minimo >= 3);

-- Correo único de proveedor
ALTER TABLE PROVEEDOR
ADD CONSTRAINT UNQ_EMAIL_PROVEEDOR UNIQUE (email);

-- Nombre único de marca
ALTER TABLE MARCA
ADD CONSTRAINT UNQ_NOMBRE_MARCA UNIQUE (nombre_marca);

-- Cantidad en detalle de venta mayor a cero
ALTER TABLE DETALLE_VENTA
ADD CONSTRAINT CHK_CANTIDAD_DETALLE CHECK (cantidad > 0);


------------------------------------------------------
--POBLACION DE TABLAS SOLICITADAS EN LA EVALUACION
------------------------------------------------------

-- SECUENCIAS

DROP SEQUENCE seq_salud;
DROP SEQUENCE seq_empleado;
-- Secuencia para salud (inicia en 2050, incrementa 10)
CREATE SEQUENCE seq_salud START WITH 2050 INCREMENT BY 10;
-- Secuencia para empleado (inicia en 750, incrementa 3)
CREATE SEQUENCE seq_empleado START WITH 750 INCREMENT BY 3;

-- REGIONES
INSERT INTO REGION(id_region, nom_region) VALUES (1, 'Region Metropolitana');
INSERT INTO REGION(id_region, nom_region) VALUES (2, 'Valparaíso');
INSERT INTO REGION(id_region, nom_region) VALUES (3, 'Biobio');
INSERT INTO REGION(id_region, nom_region) VALUES (4, 'Los Lagos');

-- MEDIO_PAGO
INSERT INTO MEDIO_PAGO(id_mpago, nombre_mpago) VALUES (11, 'Efectivo');
INSERT INTO MEDIO_PAGO(id_mpago, nombre_mpago) VALUES (12, 'Tarjeta Débito');
INSERT INTO MEDIO_PAGO(id_mpago, nombre_mpago) VALUES (13, 'Tarjeta Crédito');
INSERT INTO MEDIO_PAGO(id_mpago, nombre_mpago) VALUES (14, 'Cheque');

-- AFP usando identity
INSERT INTO AFP(nom_afp) VALUES ('AFP Habitat');
INSERT INTO AFP(nom_afp) VALUES ('AFP Cuprum');
INSERT INTO AFP(nom_afp) VALUES ('AFP Provida');
INSERT INTO AFP(nom_afp) VALUES ('AFP PlanVital');

-- SALUD usando secuencia
INSERT INTO SALUD(id_salud, nom_salud) VALUES (seq_salud.NEXTVAL, 'Fonasa');
INSERT INTO SALUD(id_salud, nom_salud) VALUES (seq_salud.NEXTVAL, 'Isapre Colmena');
INSERT INTO SALUD(id_salud, nom_salud) VALUES (seq_salud.NEXTVAL, 'Isapre Banmédica');
INSERT INTO SALUD(id_salud, nom_salud) VALUES (seq_salud.NEXTVAL, 'Cruz Blanca');

-- EMPLEADOS
INSERT INTO EMPLEADO(id_empleado, rut_empleado, nombre_empleado, apellido_paterno, apellido_materno, fecha_contratacion, sueldo_base, bono_jefatura, activo, tipo_empleado, cod_empleado, cod_salud, cod_afp)
VALUES (seq_empleado.NEXTVAL, '11111111-1', 'Marcela', 'González', 'Pérez', TO_DATE('15-03-2022','DD-MM-YYYY'), 950000, 80000, 'S', 'Administrativo', NULL, 2050, 210);

INSERT INTO EMPLEADO(id_empleado, rut_empleado, nombre_empleado, apellido_paterno, apellido_materno, fecha_contratacion, sueldo_base, bono_jefatura, activo, tipo_empleado, cod_empleado, cod_salud, cod_afp)
VALUES (seq_empleado.NEXTVAL, '22222222-2', 'José', 'Muñoz', 'Ramírez', TO_DATE('10-07-2021','DD-MM-YYYY'), 900000, 75000, 'S', 'Administrativo', NULL, 2060, 216);

INSERT INTO EMPLEADO(id_empleado, rut_empleado, nombre_empleado, apellido_paterno, apellido_materno, fecha_contratacion, sueldo_base, bono_jefatura, activo, tipo_empleado, cod_empleado, cod_salud, cod_afp)
VALUES (seq_empleado.NEXTVAL, '33333333-3', 'Verónica', 'Soto', 'Alarcón', TO_DATE('05-01-2020','DD-MM-YYYY'), 880000, 70000, 'S', 'Vendedor', 750, 2060, 228);

INSERT INTO EMPLEADO(id_empleado, rut_empleado, nombre_empleado, apellido_paterno, apellido_materno, fecha_contratacion, sueldo_base, bono_jefatura, activo, tipo_empleado, cod_empleado, cod_salud, cod_afp)
VALUES (seq_empleado.NEXTVAL, '44444444-4', 'Luis', 'Reyes', 'Fuentes', TO_DATE('01-04-2023','DD-MM-YYYY'), 560000, NULL, 'S', 'Vendedor', 750, 2070, 228);

INSERT INTO EMPLEADO(id_empleado, rut_empleado, nombre_empleado, apellido_paterno, apellido_materno, fecha_contratacion, sueldo_base, bono_jefatura, activo, tipo_empleado, cod_empleado, cod_salud, cod_afp)
VALUES (seq_empleado.NEXTVAL, '55555555-5', 'Claudia', 'Fernández', 'Lagos', TO_DATE('15-04-2023','DD-MM-YYYY'), 600000, NULL, 'S', 'Vendedor', 753, 2070, 216);

INSERT INTO EMPLEADO(id_empleado, rut_empleado, nombre_empleado, apellido_paterno, apellido_materno, fecha_contratacion, sueldo_base, bono_jefatura, activo, tipo_empleado, cod_empleado, cod_salud, cod_afp)
VALUES (seq_empleado.NEXTVAL, '66666666-6', 'Carlos', 'Navarro', 'Vega', TO_DATE('01-05-2023','DD-MM-YYYY'), 610000, NULL, 'S', 'Administrativo', 753, 2060, 210);

INSERT INTO EMPLEADO(id_empleado, rut_empleado, nombre_empleado, apellido_paterno, apellido_materno, fecha_contratacion, sueldo_base, bono_jefatura, activo, tipo_empleado, cod_empleado, cod_salud, cod_afp)
VALUES (seq_empleado.NEXTVAL, '77777777-7', 'Javiera', 'Pino', 'Rojas', TO_DATE('10-05-2023','DD-MM-YYYY'), 650000, NULL, 'S', 'Administrativo', 750, 2050, 210);

INSERT INTO EMPLEADO(id_empleado, rut_empleado, nombre_empleado, apellido_paterno, apellido_materno, fecha_contratacion, sueldo_base, bono_jefatura, activo, tipo_empleado, cod_empleado, cod_salud, cod_afp)
VALUES (seq_empleado.NEXTVAL, '88888888-8', 'Diego', 'Mella', 'Contreras', TO_DATE('12-05-2023','DD-MM-YYYY'), 620000, NULL, 'S', 'Vendedor', 750, 2060, 216);

INSERT INTO EMPLEADO(id_empleado, rut_empleado, nombre_empleado, apellido_paterno, apellido_materno, fecha_contratacion, sueldo_base, bono_jefatura, activo, tipo_empleado, cod_empleado, cod_salud, cod_afp)
VALUES (seq_empleado.NEXTVAL, '99999999-9', 'Fernanda', 'Salas', 'Herrera', TO_DATE('18-05-2023','DD-MM-YYYY'), 570000, NULL, 'S', 'Vendedor', 753, 2070, 228);

INSERT INTO EMPLEADO(id_empleado, rut_empleado, nombre_empleado, apellido_paterno, apellido_materno, fecha_contratacion, sueldo_base, bono_jefatura, activo, tipo_empleado, cod_empleado, cod_salud, cod_afp)
VALUES (seq_empleado.NEXTVAL, '10101010-0', 'Tomás', 'Vidal', 'Espinoza', TO_DATE('01-06-2023','DD-MM-YYYY'), 530000, NULL, 'S', 'Vendedor', NULL, 2050, 222);

-- VENTA usando identity
INSERT INTO VENTA(fecha_venta, total_venta, codigo_mpago, cod_empleado) 
VALUES (TO_DATE('12-05-2023','DD-MM-YYYY'), 225990, 12, 771);

INSERT INTO VENTA(fecha_venta, total_venta, codigo_mpago, cod_empleado) 
VALUES (TO_DATE('23-10-2023','DD-MM-YYYY'), 524990, 13, 777);

INSERT INTO VENTA(fecha_venta, total_venta, codigo_mpago, cod_empleado) 
VALUES (TO_DATE('17-02-2023','DD-MM-YYYY'), 466990, 11, 759);

----------------------------------------------------------------------
-- POBLACION DE TABLAS NECESARIAS POR CONCEPTO DE LOGICA DE NEGOCIO
----------------------------------------------------------------------

-- COMUNA
INSERT INTO COMUNA(id_comuna, nom_comuna, cod_region) VALUES (1, 'Santiago', 1);
INSERT INTO COMUNA(id_comuna, nom_comuna, cod_region) VALUES (2, 'Puente Alto', 1);

INSERT INTO COMUNA(id_comuna, nom_comuna, cod_region) VALUES (3, 'Valparaíso', 2);
INSERT INTO COMUNA(id_comuna, nom_comuna, cod_region) VALUES (4, 'Viña del Mar', 2);

INSERT INTO COMUNA(id_comuna, nom_comuna, cod_region) VALUES (5, 'Concepción', 3);
INSERT INTO COMUNA(id_comuna, nom_comuna, cod_region) VALUES (6, 'Talcahuano', 3);

INSERT INTO COMUNA(id_comuna, nom_comuna, cod_region) VALUES (7, 'Puerto Montt', 4);
INSERT INTO COMUNA(id_comuna, nom_comuna, cod_region) VALUES (8, 'Osorno', 4);


-- PROVEEDORES
INSERT INTO PROVEEDOR(id_proveedor, nombre_proveedor, rut_proveedor, telefono, email, direccion, cod_comuna)
VALUES (101, 'Proveedor 1', '11111111-1', '192837465', 'proveedor1@gmail.com', 'Calle Gato 1542', 1);

INSERT INTO PROVEEDOR(id_proveedor, nombre_proveedor, rut_proveedor, telefono, email, direccion, cod_comuna)
VALUES (102, 'Proveedor 2', '22222222-2', '987654321', 'proveedor2@hotmail.com', 'Alfajor Pereira 1294', 3);

INSERT INTO PROVEEDOR(id_proveedor, nombre_proveedor, rut_proveedor, telefono, email, direccion, cod_comuna)
VALUES (103, 'Proveedor 3', '33333333-3', '123456789', 'proveedor3@yahoo.es', 'Pasaje Los Saiyajin 3056 ', 5);


-- MARCAS
INSERT INTO MARCA(id_marca, nombre_marca) VALUES (201, 'Evercrisp');
INSERT INTO MARCA(id_marca, nombre_marca) VALUES (202, 'Andina');
INSERT INTO MARCA(id_marca, nombre_marca) VALUES (203, 'Fruna');


-- CATEGORIAS
INSERT INTO CATEGORIA(id_categoria, nombre_categoria) VALUES (301, 'Bebidas');
INSERT INTO CATEGORIA(id_categoria, nombre_categoria) VALUES (302, 'Snacks');


-- PRODUCTOS
INSERT INTO PRODUCTO(id_producto, nombre_producto, precio_unitario, origen_nacional, stock_minimo, activo, cod_marca, cod_categoria, cod_proveedor)
VALUES (401, 'Coca Cola 1L', 1200, 'S', 10, 'S', 202, 301, 101);

INSERT INTO PRODUCTO(id_producto, nombre_producto, precio_unitario, origen_nacional, stock_minimo, activo, cod_marca, cod_categoria, cod_proveedor)
VALUES (402, 'Sprite 2L', 1100, 'S', 10, 'S', 202, 301, 102);

INSERT INTO PRODUCTO(id_producto, nombre_producto, precio_unitario, origen_nacional, stock_minimo, activo, cod_marca, cod_categoria, cod_proveedor)
VALUES (403, 'Lays Original', 1500, 'S', 5, 'S', 201, 302, 103);

INSERT INTO PRODUCTO(id_producto, nombre_producto, precio_unitario, origen_nacional, stock_minimo, activo, cod_marca, cod_categoria, cod_proveedor)
VALUES (404, 'Kilombo', 500, 'S', 5, 'S', 203, 302, 101);

INSERT INTO PRODUCTO(id_producto, nombre_producto, precio_unitario, origen_nacional, stock_minimo, activo, cod_marca, cod_categoria, cod_proveedor)
VALUES (405, 'Tabletones', 1500, 'S', 15, 'S', 203, 302, 102);


-- DETALLE_VENTA 

INSERT INTO DETALLE_VENTA(cod_venta, cod_producto, cantidad) VALUES (5050, 401, 2);
INSERT INTO DETALLE_VENTA(cod_venta, cod_producto, cantidad) VALUES (5050, 403, 1);

INSERT INTO DETALLE_VENTA(cod_venta, cod_producto, cantidad) VALUES (5053, 402, 3);
INSERT INTO DETALLE_VENTA(cod_venta, cod_producto, cantidad) VALUES (5053, 404, 2);

INSERT INTO DETALLE_VENTA(cod_venta, cod_producto, cantidad) VALUES (5056, 405, 4);
INSERT INTO DETALLE_VENTA(cod_venta, cod_producto, cantidad) VALUES (5056, 403, 2);


-- VENDEDOR
INSERT INTO VENDEDOR(id_empleado, comision_venta) VALUES (756, 0.10);
INSERT INTO VENDEDOR(id_empleado, comision_venta) VALUES (759, 0.05);
INSERT INTO VENDEDOR(id_empleado, comision_venta) VALUES (762, 0);
INSERT INTO VENDEDOR(id_empleado, comision_venta) VALUES (771, 0.06);
INSERT INTO VENDEDOR(id_empleado, comision_venta) VALUES (774, 0.15);
INSERT INTO VENDEDOR(id_empleado, comision_venta) VALUES (777, 0.25);

-------------------------
-- INFORMES SOLICITADOS
-------------------------


--INFORME 1

SELECT
    id_empleado AS "IDENTIFICADOR",
    nombre_empleado || ' ' || apellido_paterno || ' ' || apellido_materno AS "NOMBRE COMPLETO",
    sueldo_base AS "SALARIO",
    bono_jefatura AS "BONIFICACION",
    (sueldo_base + bono_jefatura) AS "SALARIO SIMULADO"
FROM EMPLEADO
WHERE activo = 'S'
  AND bono_jefatura IS NOT NULL
ORDER BY "SALARIO SIMULADO" DESC, apellido_paterno DESC;

--INFORME 2

SELECT
    nombre_empleado || ' ' || apellido_paterno || ' ' || apellido_materno AS "EMPLEADO",
    sueldo_base AS "SUELDO",
    0.08 AS "POSIBLE AUMENTO",
    (sueldo_base * 1.08) AS "SALARIO SIMULADO"
FROM EMPLEADO
WHERE sueldo_base BETWEEN 550000 AND 800000
ORDER BY sueldo_base ASC;
